version: 1.0.0
title: k6 test
description: |
  When terminating a random pod from a replicaset containing API servers,
  there should not be any dropped, or erroring, request while the service recovers.
tags:
  - kubernetes
  - pods
  - replicaset
  - error rates
  - http
contributions:
  reliability: medium
  security: none
  scalability: medium
steady-state-hypothesis:
  title: api is alive and healthy
  probes:
    - type: probe
      name: api-is-responding-with-http-status-200
      tolerance: true
      provider:
        type: python
        module: chaosk6.probes
        func: http
        arguments:
          endpoint: https://test-api.k6.io
          method: get
          status: 200
          vus: 10
          duration: 5s
          debug: false
          headers:
            Content-Type: application/json
    - name: count-pods
      type: probe
      tolerance: 5
      provider:
        type: python
        module: chaosk8s.pod.probes
        func: count_pods
        arguments:
          label_selector: run=load-balancer-example
          phase: Running
method:
  - type: probe
    name: api-is-responding-with-http-status-200
    tolerance: true
    background: true
    provider:
      type: python
      module: chaosk6.probes
      func: http
      arguments:
        endpoint: http://10.7.10.201:8080
        method: get
        status: 200
        vus: 10
        duration: 20s
        debug: false
        headers:
          Content-Type: application/json
  - type: action
    name: terminate-webserver-pod
    provider:
      type: python
      module: chaosk8s.pod.actions
      func: terminate_pods
      arguments:
        label_selector: run=load-balancer-example
        name_pattern: '^hello-world-.*$'
        grace_period: 2
        rand: true
    pauses:
      before: 10
